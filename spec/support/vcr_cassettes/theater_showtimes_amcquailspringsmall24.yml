---
http_interactions:
- request:
    method: get
    uri: https://www.fandango.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Etag:
      - W/"1b047-wZtte3+fn3InQrbQ2ksEFg"
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Response-Time:
      - 6.144ms
      X-Screenplay-Platform:
      - desktop
      X-Xss-Protection:
      - '1'
      X-Akamai-Transformed:
      - 9 - 0 pmb=mRUM,1
      Vary:
      - Accept-Encoding
      Date:
      - Sun, 09 Sep 2018 16:42:36 GMT
      Transfer-Encoding:
      - chunked
      Connection:
      - Transfer-Encoding
      - keep-alive
      Set-Cookie:
      - akamai_generated_location={"zip":"73101-73132+73134-73137+73139-73157+73159-73160+73162-73165+73167+73169-73170+73172-73173+73178-73179+73184-73185+73189-73190+73194-73196","city":"OKLAHOMACITY","state":"OK","county":"OKLAHOMA+CLEVELAND","areacode":"405","lat":"35.4678","long":"-97.5164","countrycode":"US","continent":"NA"};
        expires=Tue, 09-Oct-2018 16:42:36 GMT; path=/; domain=.fandango.com
      - screenplay_platform=desktop; expires=Thu, 08-Nov-2018 16:42:36 GMT; path=/;
        domain=.fandango.com
      Strict-Transport-Security:
      - max-age=86400; includeSubDomains
      Content-Security-Policy:
      - upgrade-insecure-requests; block-all-mixed-content
      Access-Control-Allow-Origin:
      - https://www.fandango.com
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 09 Sep 2018 16:42:36 GMT
- request:
    method: get
    uri: http://www.fandango.com/amcquailspringsmall24_aaktw/theaterpage?wssac=123&wssaffid=11836
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Server:
      - AkamaiGHost
      Content-Length:
      - '0'
      Location:
      - https://www.fandango.com/amcquailspringsmall24_aaktw/theaterpage?wssac=123&wssaffid=11836
      Date:
      - Sun, 09 Sep 2018 16:42:36 GMT
      Connection:
      - keep-alive
      Set-Cookie:
      - akamai_generated_location={"zip":"73101-73132+73134-73137+73139-73157+73159-73160+73162-73165+73167+73169-73170+73172-73173+73178-73179+73184-73185+73189-73190+73194-73196","city":"OKLAHOMACITY","state":"OK","county":"OKLAHOMA+CLEVELAND","areacode":"405","lat":"35.4678","long":"-97.5164","countrycode":"US","continent":"NA"};
        expires=Tue, 09-Oct-2018 16:42:36 GMT; path=/; domain=.fandango.com
      - screenplay_platform=desktop; expires=Thu, 08-Nov-2018 16:42:36 GMT; path=/;
        domain=.fandango.com
      Strict-Transport-Security:
      - max-age=86400; includeSubDomains
      Content-Security-Policy:
      - upgrade-insecure-requests; block-all-mixed-content
      Access-Control-Allow-Origin:
      - https://www.fandango.com
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Sun, 09 Sep 2018 16:42:36 GMT
recorded_with: VCR 3.0.3
